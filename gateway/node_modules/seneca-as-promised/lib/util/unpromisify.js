'use strict';

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

/**
 * util/unpromisify.js
 *
 * @author  Denis Luchkin-Zhou <denis@ricepo.com>
 * @license 2015-16 (C) Ricepo LLC. All Rights Reserved.
 */
const _ = require('lodash');
const Bluebird = require('bluebird');

/**
 * Custom unpromisifier in order to support .wrap() and .prior()
 */
function unpromisify(fn) {

  return function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    let callback = function callback() {};

    /* If last argument is a callback, separate it out */
    if (typeof _.last(args) === 'function') {
      callback = _.last(args);
      args = _.take(args, args.length - 1);
    }

    /* Construct the Senecajs context */
    const context = {};
    Object.setPrototypeOf(context, this);

    /* Bind and promisify the prior$ function */
    context.priorAsync = Bluebird.promisify(this.prior).bind(this);
    context.prior$ = context.priorAsync; // NOTE Lecacy alias

    /* Call the function and wrap the promise */
    return Bluebird.try(() => fn.call.apply(fn, [context].concat(_toConsumableArray(args)))).nodeify(callback);
  };
}
module.exports = unpromisify;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWwvdW5wcm9taXNpZnkuanMiXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJCbHVlYmlyZCIsInVucHJvbWlzaWZ5IiwiZm4iLCJhcmdzIiwiY2FsbGJhY2siLCJsYXN0IiwidGFrZSIsImxlbmd0aCIsImNvbnRleHQiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsInByaW9yQXN5bmMiLCJwcm9taXNpZnkiLCJwcmlvciIsImJpbmQiLCJwcmlvciQiLCJ0cnkiLCJjYWxsIiwibm9kZWlmeSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0FBTUEsTUFBTUEsSUFBZUMsUUFBUSxRQUFSLENBQXJCO0FBQ0EsTUFBTUMsV0FBZUQsUUFBUSxVQUFSLENBQXJCOztBQUlBOzs7QUFHQSxTQUFTRSxXQUFULENBQXFCQyxFQUFyQixFQUF5Qjs7QUFFdkIsU0FBTyxZQUFrQjtBQUFBLHNDQUFOQyxJQUFNO0FBQU5BLFVBQU07QUFBQTs7QUFDdkIsUUFBSUMsV0FBVyxvQkFBVyxDQUFHLENBQTdCOztBQUVBO0FBQ0EsUUFBSSxPQUFPTixFQUFFTyxJQUFGLENBQU9GLElBQVAsQ0FBUCxLQUF3QixVQUE1QixFQUF3QztBQUN0Q0MsaUJBQVdOLEVBQUVPLElBQUYsQ0FBT0YsSUFBUCxDQUFYO0FBQ0FBLGFBQVdMLEVBQUVRLElBQUYsQ0FBT0gsSUFBUCxFQUFhQSxLQUFLSSxNQUFMLEdBQWMsQ0FBM0IsQ0FBWDtBQUNEOztBQUVEO0FBQ0EsVUFBTUMsVUFBVSxFQUFoQjtBQUNBQyxXQUFPQyxjQUFQLENBQXNCRixPQUF0QixFQUErQixJQUEvQjs7QUFFQTtBQUNBQSxZQUFRRyxVQUFSLEdBQXFCWCxTQUNsQlksU0FEa0IsQ0FDUixLQUFLQyxLQURHLEVBRWxCQyxJQUZrQixDQUViLElBRmEsQ0FBckI7QUFHQU4sWUFBUU8sTUFBUixHQUFpQlAsUUFBUUcsVUFBekIsQ0FqQnVCLENBaUJjOztBQUVyQztBQUNBLFdBQU9YLFNBQ0pnQixHQURJLENBQ0EsTUFBTWQsR0FBR2UsSUFBSCxZQUFRVCxPQUFSLDRCQUFvQkwsSUFBcEIsR0FETixFQUVKZSxPQUZJLENBRUlkLFFBRkosQ0FBUDtBQUdELEdBdkJEO0FBeUJEO0FBQ0RlLE9BQU9DLE9BQVAsR0FBaUJuQixXQUFqQiIsImZpbGUiOiJ1dGlsL3VucHJvbWlzaWZ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiB1dGlsL3VucHJvbWlzaWZ5LmpzXG4gKlxuICogQGF1dGhvciAgRGVuaXMgTHVjaGtpbi1aaG91IDxkZW5pc0ByaWNlcG8uY29tPlxuICogQGxpY2Vuc2UgMjAxNS0xNiAoQykgUmljZXBvIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqL1xuY29uc3QgXyAgICAgICAgICAgID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5jb25zdCBCbHVlYmlyZCAgICAgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xuXG5cblxuLyoqXG4gKiBDdXN0b20gdW5wcm9taXNpZmllciBpbiBvcmRlciB0byBzdXBwb3J0IC53cmFwKCkgYW5kIC5wcmlvcigpXG4gKi9cbmZ1bmN0aW9uIHVucHJvbWlzaWZ5KGZuKSB7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKC4uLmFyZ3MpIHtcbiAgICBsZXQgY2FsbGJhY2sgPSBmdW5jdGlvbigpIHsgfTtcblxuICAgIC8qIElmIGxhc3QgYXJndW1lbnQgaXMgYSBjYWxsYmFjaywgc2VwYXJhdGUgaXQgb3V0ICovXG4gICAgaWYgKHR5cGVvZiBfLmxhc3QoYXJncykgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNhbGxiYWNrID0gXy5sYXN0KGFyZ3MpO1xuICAgICAgYXJncyAgICAgPSBfLnRha2UoYXJncywgYXJncy5sZW5ndGggLSAxKTtcbiAgICB9XG5cbiAgICAvKiBDb25zdHJ1Y3QgdGhlIFNlbmVjYWpzIGNvbnRleHQgKi9cbiAgICBjb25zdCBjb250ZXh0ID0geyB9O1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihjb250ZXh0LCB0aGlzKTtcblxuICAgIC8qIEJpbmQgYW5kIHByb21pc2lmeSB0aGUgcHJpb3IkIGZ1bmN0aW9uICovXG4gICAgY29udGV4dC5wcmlvckFzeW5jID0gQmx1ZWJpcmRcbiAgICAgIC5wcm9taXNpZnkodGhpcy5wcmlvcilcbiAgICAgIC5iaW5kKHRoaXMpO1xuICAgIGNvbnRleHQucHJpb3IkID0gY29udGV4dC5wcmlvckFzeW5jOyAvLyBOT1RFIExlY2FjeSBhbGlhc1xuXG4gICAgLyogQ2FsbCB0aGUgZnVuY3Rpb24gYW5kIHdyYXAgdGhlIHByb21pc2UgKi9cbiAgICByZXR1cm4gQmx1ZWJpcmRcbiAgICAgIC50cnkoKCkgPT4gZm4uY2FsbChjb250ZXh0LCAuLi5hcmdzKSlcbiAgICAgIC5ub2RlaWZ5KGNhbGxiYWNrKTtcbiAgfTtcblxufVxubW9kdWxlLmV4cG9ydHMgPSB1bnByb21pc2lmeTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
